apply plugin: 'com.android.application'

android {
	compileSdkVersion 24
	buildToolsVersion "24.0.1"

	defaultConfig {
		minSdkVersion 11
		targetSdkVersion 24
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}
}

dependencies {
	compile project(':library')

	testCompile 'junit:junit:4.12'
	testCompile 'org.hamcrest:hamcrest-library:1.3'
	testCompile 'org.mockito:mockito-core:1.10.19'

	androidTestCompile 'com.android.support:support-annotations:24.2.0' // Resolves conflict
	androidTestCompile 'com.android.support.test:runner:0.4'
	androidTestCompile 'com.android.support.test:rules:0.4'
	androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
	androidTestCompile 'org.mockito:mockito-core:1.10.19'
}

// This task should be run before the instrumented unit tests are executed
task grantAndroidTestPermissions(type: Exec) {
	// Permissions list is based on the contents of the instrumented units tests
	def permissions = ['android.permission.WRITE_EXTERNAL_STORAGE']

	// Get the path to the adb shell
	def androidPlugin = project.plugins.findPlugin("android")
	def adb = androidPlugin.sdkHandler.sdkInfo?.adb

	// Grant each permission
	permissions.each {
		commandLine "$adb", "shell", "pm", "grant", "com.matthewtamlin.android_utilities_unit_testing",
				"$it"
	}
}